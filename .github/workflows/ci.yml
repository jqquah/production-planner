name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies and lint
        run: |
          cd backend
          npm install
          npm run lint

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies and lint
        run: |
          cd frontend
          npm install
          npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint-backend, lint-frontend]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create dummy .env file for build
      run: |
        echo "POSTGRES_USER=test" >> .env
        echo "POSTGRES_PASSWORD=test" >> .env
        echo "POSTGRES_DB=test" >> .env
        echo "JWT_SECRET=test" >> .env

    - name: Build production Docker images
      run: docker compose -f docker-compose.prod.yml build
