services:
  db:
    image: postgres:15-alpine
    container_name: soluxe_db_prod
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - soluxe-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: soluxe_backend_prod
    restart: always
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - soluxe-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: soluxe_frontend_prod
    restart: always
    networks:
      - soluxe-network

  nginx:
    image: nginx:alpine
    container_name: soluxe_nginx_prod
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - soluxe-network

networks:
  soluxe-network:
    driver: bridge

volumes:
  postgres_data_prod:
