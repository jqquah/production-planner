services:
  db:
    image: postgres:15-alpine
    container_name: soluxe_db_dev
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-soluxe_dev}
      - POSTGRES_USER=${POSTGRES_USER:-soluxe}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password123}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - soluxe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-soluxe} -d $${POSTGRES_DB:-soluxe_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: soluxe_backend_dev
    restart: always
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5001:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-soluxe}:${POSTGRES_PASSWORD:-password123}@db:5432/${POSTGRES_DB:-soluxe_dev}
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET:-a-very-secret-and-secure-key-for-jwt-that-is-long-enough}
    networks:
      - soluxe-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: soluxe_frontend_dev
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - soluxe-network

  nginx:
    image: nginx:alpine
    container_name: soluxe_nginx_dev
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - soluxe-network

networks:
  soluxe-network:
    driver: bridge

volumes:
  postgres_data:
